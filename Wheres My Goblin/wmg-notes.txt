3 ribbons - top, middle, bottom (head, body, legs)
swipe left or right, ribbon moves
ribbon needs to stop with body part centered on screen

ipad screen dimensions 640x960 ?
image width 600
image height 300
images per ribbon 10


centerHitArea

on button press 
	get button ID
on release,
	if any part of button is touching center hit area
		use button ID to determine where group must move to in order to 'snap' to center
		ribbon has 10 divisions. If button 2 is touching move ribbon to division 2 center
	elseif button is not touching
		see if button is to left (x less than) or right (x greater than) of center
		if button is left, move to next right button center
		if button is right, move to previous left button center


transition.moveTo()
on slow drag, on release - snap to nearest center (left/right)
on swipe (left/right) - move to next center point (left/right)


local blockWidth = 450
local blockMargin = 15
local blockCount = 5
local blockXWidth = (blockWidth + blockMargin) * -1

foreach

start 0
b1Start: 0 
b1End: blockXWidth
b2Start: b1End
b2End: b2Start + blockXWidth
b3Start: b2End
b3End: b3Start + blockXWidth
b4Start: b3End
b4End: 
block 5: end of block 4 to (450 + margin)

TO DO:

Randomize button 
	generate three random numbers
	store values as correct answer
	move ribbons to appropriate randomized block
Submit button
	compare current user selections (3 vars) to correct answer blocks
	return right/wrong message (audio)



SCENES:

scene 1: start screen
	image, title, start button
	on start, go to scene 2
scene 2: missing poster
	generate random block ids, display poster image
scene 3: gam play
	three ribbon, mix-n-match
	hit submit and current blocks are compared to original random block ids to confirm match


Ribbon Looping:
ribbon1a, ribbon1b
ribbon2a, ribbon2b
ribbon3a, ribbon3b


--------------------------------

-- BANNER INTRO 

-- functions, vars

uiActive = "true"
	goblin-slider active
	sign active
	gear active

uiActive = "false"
	goblin-slider inactive
	sign inactive
	gear inactive

local function raiseBanner()
	handleUp
	gearBackward
	bannerUp
	if introFinished = "true" then
		-- on later, non-intro usage, re-activate UI
		uiActive = "true"
	else
		-- cue up next part of intro
		timer.performWithDelay( 600, sliderIntro )
	end
end

local function lowerBanner()
	uiActive = "false"
	handleDown
	gearFoward
	bannerDown
	play audio wheresMyGoblin
	bannerTimer = timer.performWithDelay( 4000, raiseBanner )
end

local function raiseBannerNow()
	timer.cancel( bannerTimer )
	raiseBanner()
end

-- START intro animation

introFinished = "false" --> !! Replace introFinished with uiActive?
goblin-slider invisible (from end of previous scene)

lowerBanner() -- lower banner, raise banner and cue sliderIntro

sliderIntro()
	goblin-slider visible
	goblin pieces scroll across/slide in
	sign spins up
	introFinished = "true"
	uiActive = "true"

-- END INTRO
-- START GAMEPLAY

on gear click
	lowerBanner()

on sign click
	uiActive = "false"

	if matchBlocks = activeBlocks
		sign spinToCheck
		play audio thatsMyGoblin
		play Win animation
	elseif matchBlocks ~= activeBlocks
		sign spinToX
		play audio notMyGoblin
		--> !! Do not lower banner
		pause
		spin back to goblin
		uiActive = "true"
		
-- END GAMEPLAY




